{"version":3,"sources":["lib/erc20.js","lib/erc721.js","lib/helpers.js","assets/images/icons/pencil-square.svg","views/ItemDetails.js","components/TokenAttribute.js","components/Navbar.js","components/ConnectWallet.js","components/Footer.js","components/Item.js","components/ItemList.js","views/Home.js","App.js","reportWebVitals.js","index.js","lib/alchemyClient.js","lib/datastorage.js","assets/images/loading.gif","lib/userAccess.js"],"names":["polygonProvider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","process","abi","approve","address","value","data","waitForTransaction","hash","console","log","getOwnedEmojis","balanceOf","getOwnedTokens","getTokenURI","id","tokenURI","getOwnerOf","ownerOf","approvenft","coinValues","getCoinPrice","coinType","utils","parseEther","toString","ItemDetails","accountConnected","useParams","useState","showMessage","setShowMessage","headerMessage","setHeaderMessage","showRefreshLink","setShowRefreshLink","metadata","setMetadata","coinFullDetail","setCoinFullDetail","coinDetail","setCoinDetail","owner","setOwner","owned","setOwned","locked","setLocked","dataStorageCoin","setDataStorageCoin","cloneable","setCloneable","loaded","setLoaded","inputErrors","setInputErrors","nameChangeModalVisibiltiy","setNameChangeModalVisibiltiy","tokenName","setTokenName","nameChangeStep","setNameChangeStep","nameChangeApproveBtnText","setNameChangeApproveBtnText","nameChangeApproveBtnDisabled","setNameChangeApproveBtnDisabled","nameChangeActionBtnText","setNameChangeActionBtnText","nameChangeActionBtnDisabled","setNameChangeActionBtnDisabled","descriptionChangeModalVisibiltiy","setDescriptionChangeModalVisibiltiy","tokenDescription","setTokenDescription","descriptionChangeStep","setDescriptionChangeStep","descriptionChangeApproveBtnText","setDescriptionChangeApproveBtnText","descriptionChangeApproveBtnDisabled","setDescriptionChangeApproveBtnDisabled","descriptionChangeActionBtnText","setDescriptionChangeActionBtnText","descriptionChangeActionBtnDisabled","setDescriptionChangeActionBtnDisabled","cloneCoinModalVisibiltiy","setCloneCoinModalVisibiltiy","cloneCoinStep","setCloneCoinStep","cloneCoinApproveBtnText","setCloneCoinApproveBtnText","cloneCoinApproveBtnDisabled","setCloneCoinApproveBtnDisabled","cloneCoinActionBtnText","setCloneCoinActionBtnText","cloneCoinActionBtnDisabled","setCloneCoinActionBtnDisabled","emojiCount","setEmojiCount","burnCoinModalVisibility","setBurnCoinModalVisibility","burnActionBtnText","setBurnActionBtnText","burnActionBtnDisabled","setBurnActionBtnDisabled","loadCoinMetadata","then","base64ToString","Buffer","from","substring","meta","JSON","parse","image","replace","attributes","isCloneable","find","attr","isLocked","setEmojiPrice","multiplier","coinPrice","nameChangeModalShow","setName","val","displayMessageRefresh","extractMessage","message","descriptionChangeModalShow","setDescription","cloneCoin","getCoinFull","displayMessage","startIndex","indexOf","userMessage","length","useEffect","isOwned","getCoin","className","variant","show","onClose","dismissible","type","onClick","to","xmlns","width","height","fill","viewBox","d","alchemyClient","nft","getNftMetadata","Math","floor","Date","now","timeLastUpdated","refreshNftMetadata","disabled","fillRule","defaultActiveKey","transition","eventKey","title","style","backgroundColor","background_color","placeholderSrc","LoadingImage","src","alt","onError","currentTarget","setTimeout","href","coinTemplate","target","rel","download","name","require","default","description","slice","toUpperCase","external_url","coinCount","map","attribute","index","role","getClonePrice","clonePrice","onHide","centered","Header","closeButton","Title","Body","maxLength","onChange","e","placeholder","steps","activeStep","size","circleFontSize","titleTop","Footer","cols","rows","burnCoin","TokenAttribute","trait_type","Navbar","connectWallet","ConnectWallet","onAccountConnect","web3Modal","setWeb3Modal","setAddress","emojis","setEmojis","emojiTokens","setEmojiTokens","setShow","connect","addListeners","provider","getAddress","userAddress","clearCachedProvider","setBalances","round","web3ModalProvider","on","accounts","location","reload","chainId","newWeb3Modal","Web3Modal","cacheProvider","network","cachedProvider","Toast","delay","autohide","showBalances","Item","token","setMetdata","navigate","useNavigate","rawMetadata","tokenId","ItemList","tokens","totalCount","pagedTokens","setPagedTokens","paginationItem","setPaginationItems","fetchPage","latestPage","innerText","parseInt","updatePagination","pagesCount","ceil","items","number","push","Pagination","active","Home","ownedTokens","setOwnedTokens","setTotalCount","fetchData","pageKey","getNftsForOwner","contractAddresses","r","ownedNfts","Alert","App","setAccountConnected","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","settings","apiKey","Network","MATIC_MAINNET","alchemy","Alchemy","newName","error","newDescription"],"mappings":"8NAIMA,EAAkB,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UAC3DC,EAASN,EAAgBO,YACzBC,EAAW,IAAIP,IAAOQ,SAASC,6CAA2CC,EAAKL,GAE9E,SAAeM,EAAtB,oC,sDAAO,WAAuBC,EAASC,GAAhC,0GAEoBN,EAASI,QAAQC,EAASC,GAF9C,cAEOC,EAFP,gBAGOf,EAAgBgB,mBAAmBD,EAAKE,MAH/C,gCAIQ,KAJR,uCAMCC,QAAQC,IAAR,MAND,kF,sBAWA,SAAeC,EAAtB,kC,sDAAO,WAA8BP,GAA9B,iGACgBL,EAASa,UAAUR,GADnC,cACGE,EADH,yBAEIA,GAFJ,4C,qOCfDf,EAAkB,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UAC3DC,EAASN,EAAgBO,YACzBC,EAAW,IAAIP,IAAOQ,SAASC,6CAA4CC,EAAKL,GAE/E,SAAegB,EAAtB,kC,sDAAO,WAA8BT,GAA9B,iGACgBL,EAASa,UAAUR,GADnC,cACGE,EADH,yBAEIA,GAFJ,4C,sBAKA,SAAeQ,EAAtB,kC,sDAAO,WAA2BC,GAA3B,iGACgBhB,EAASiB,SAASD,GADlC,cACGT,EADH,yBAEIA,GAFJ,4C,sBAKA,SAAeW,EAAtB,kC,sDAAO,WAA0BF,GAA1B,iGACgBhB,EAASmB,QAAQH,GADjC,cACGT,EADH,yBAEIA,GAFJ,4C,sBAKA,SAAea,EAAtB,oC,sDAAO,WAA0Bf,EAASC,GAAnC,0GAEoBN,EAASI,QAAQC,EAASC,GAF9C,cAEOC,EAFP,gBAGOf,EAAgBgB,mBAAmBD,EAAKE,MAH/C,gCAIQ,KAJR,uCAMCC,QAAQC,IAAR,MAND,kF,sHCrBDU,EAAa,CACf,EAAG,EACH,EAAG,GACH,EAAG,GACH,EAAG,IACH,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,KAGD,SAAeC,EAAtB,kC,sDAAO,WAA4BC,GAA5B,sGACIF,EAAWE,IAAY9B,IAAO+B,MAAMC,WAAWJ,EAAWE,GAAUG,aADxE,4C,qGCfP,OAAe,cAA0B,yC,6xkBC+qB1BC,IA5pBf,YAA8C,IAAtBC,EAAqB,EAArBA,iBACdZ,EAAOa,cAAPb,GACR,EAAwCc,oBAAS,GAAjD,mBAAQC,EAAR,KAAqBC,EAArB,KACA,EAA4CF,mBAAS,MAArD,mBAAQG,EAAR,KAAuBC,EAAvB,KACA,EAAgDJ,oBAAS,GAAzD,mBAAQK,EAAR,KAAyBC,EAAzB,KACA,EAAkCN,mBAAS,MAA3C,mBAAQO,EAAR,KAAkBC,EAAlB,KACA,EAA6CR,mBAAS,MAAtD,mBAAQS,EAAR,KAAwBC,EAAxB,KACA,EAAqCV,mBAAS,MAA9C,mBAAQW,EAAR,KAAoBC,EAApB,KACA,EAA4BZ,mBAAS,MAArC,mBAAQa,EAAR,KAAeC,GAAf,KACA,GAA4Bd,oBAAS,GAArC,qBAAQe,GAAR,MAAeC,GAAf,MACA,GAA8BhB,oBAAS,GAAvC,qBAAQiB,GAAR,MAAgBC,GAAhB,MACA,GAA+ClB,mBAAS,MAAxD,qBAAQmB,GAAR,MAAyBC,GAAzB,MACA,GAAoCpB,oBAAS,GAA7C,qBAAQqB,GAAR,MAAmBC,GAAnB,MACA,GAA8BtB,oBAAS,GAAvC,qBAAQuB,GAAR,MAAgBC,GAAhB,MACA,GAAwCxB,mBAAS,IAAjD,qBAAQyB,GAAR,MAAqBC,GAArB,MACA,GAAmE1B,oBAAS,GAA5E,qBAAQ2B,GAAR,MAAmCC,GAAnC,MACA,GAAoC5B,mBAAS,IAA7C,qBAAQ6B,GAAR,MAAmBC,GAAnB,MACA,GAA8C9B,mBAAS,GAAvD,qBAAQ+B,GAAR,MAAwBC,GAAxB,MACA,GAAiEhC,mBAAS,WAA1E,qBAAQiC,GAAR,MAAkCC,GAAlC,MACA,GAAyElC,oBAAS,GAAlF,qBAAQmC,GAAR,MAAsCC,GAAtC,MACA,GAA+DpC,mBAAS,eAAxE,qBAAQqC,GAAR,MAAiCC,GAAjC,MACA,GAAuEtC,oBAAS,GAAhF,qBAAQuC,GAAR,MAAqCC,GAArC,MACA,GAAiFxC,oBAAS,GAA1F,qBAAQyC,GAAR,MAA0CC,GAA1C,MACA,GAAkD1C,mBAAS,IAA3D,qBAAQ2C,GAAR,MAA0BC,GAA1B,MACA,GAA4D5C,mBAAS,GAArE,qBAAQ6C,GAAR,MAA+BC,GAA/B,MACA,GAA+E9C,mBAAS,WAAxF,qBAAQ+C,GAAR,MAAyCC,GAAzC,MACA,GAAuFhD,oBAAS,GAAhG,qBAAQiD,GAAR,MAA6CC,GAA7C,MACA,GAA6ElD,mBAAS,sBAAtF,qBAAQmD,GAAR,MAAwCC,GAAxC,MACA,GAAqFpD,oBAAS,GAA9F,qBAAQqD,GAAR,MAA4CC,GAA5C,MACA,GAAiEtD,oBAAS,GAA1E,qBAAQuD,GAAR,MAAkCC,GAAlC,MACA,GAA4CxD,mBAAS,GAArD,qBAAQyD,GAAR,MAAuBC,GAAvB,MACA,GAA+D1D,mBAAS,WAAxE,qBAAQ2D,GAAR,MAAiCC,GAAjC,MACA,GAAuE5D,oBAAS,GAAhF,qBAAQ6D,GAAR,MAAqCC,GAArC,MACA,GAA6D9D,mBAAS,SAAtE,qBAAQ+D,GAAR,MAAgCC,GAAhC,MACA,GAAqEhE,oBAAS,GAA9E,qBAAQiE,GAAR,MAAoCC,GAApC,MACA,GAAsClE,mBAAS,GAA/C,qBAAQmE,GAAR,MAAoBC,GAApB,MACA,GAA+DpE,oBAAS,GAAxE,qBAAQqE,GAAR,MAAiCC,GAAjC,MACA,GAAmDtE,mBAAS,QAA5D,qBAAQuE,GAAR,MAA2BC,GAA3B,MACA,GAA2DxE,oBAAS,GAApE,qBAAQyE,GAAR,MAA+BC,GAA/B,MAiBA,SAASC,KACP1F,YAAYC,GAAI0F,MAAK,SAAAnG,GAEnB,IAAIoG,EAAiBC,EAAOC,KAAKtG,EAAKuG,UAAU,IAAK,UAAUpF,WAC3DqF,EAAOC,KAAKC,MAAMN,GAKtB,GAHA,OAAII,QAAJ,IAAIA,KAAMG,QACRH,EAAKG,MAAQH,EAAKG,MAAMC,QAAQ,UAAWjH,kCAE7C,OAAI6G,QAAJ,IAAIA,KAAMK,WAAW,CACnB,IAAMC,EAAW,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAMK,WAAWE,MAAK,SAAAC,GAAI,MAAmB,cAAfA,EAAKjH,KAAT,IACxCkH,EAAQ,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAMK,WAAWE,MAAK,SAAAC,GAAI,MAAmB,WAAfA,EAAKjH,KAAT,IAC3C8C,GAAaiE,GACbrE,GAAUwE,EACX,CACDlF,EAAYyE,GACZzD,IAAU,EACX,GACF,CAED,SAASmE,GAAcC,GACnBpG,YAAY,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAgBhB,UAAUmF,MAAK,SAAAiB,GAC1CzB,GAAcwB,EAAaC,EAAY,KACxC,GACJ,CAQD,SAASC,KACP9D,GAAkB,GAClB2D,GAAc,IACdzD,GAA4B,sBAC5BI,GAA2B,eAC3BF,IAAgC,GAChCI,IAA+B,GAC/BZ,IAA6B,GAC7BF,GAAe,GAChB,CAhG0C,wDA0H3C,wFACEA,GAAe,IACG,KAAdG,IACFW,IAA+B,GAC/BF,GAA2B,eAC3ByD,YAAQ7G,EAAI2C,IAAW+C,MAAK,SAAAoB,GACd,MAARA,GACFC,GAAsB,8KACtBrE,IAA6B,GAC7B+C,MAEAjD,GAAewE,GAAc,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,UAErC7D,GAA2B,eAC3BE,IAA+B,EAChC,KAEDd,GAAe,8BAjBnB,4CA1H2C,sBA0J3C,SAAS0E,KACPtD,GAAyB,GACzB6C,GAAc,GACd3C,GAAmC,sBACnCI,GAAkC,sBAClCF,IAAuC,GACvCI,IAAsC,GACtCZ,IAAoC,GACpChB,GAAe,GAChB,CAnK0C,wDA6L3C,wFACEA,GAAe,IACU,KAArBiB,IACFW,IAAsC,GACtCF,GAAkC,eAClCiD,YAAenH,EAAIyD,IAAkBiC,MAAK,SAAAoB,GAC5B,MAARA,GACFC,GAAsB,qLACtBvD,IAAoC,GACpCiC,MAEAjD,GAAewE,GAAc,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,UAErC/C,GAAkC,sBAClCE,IAAsC,EACvC,KAED5B,GAAe,qCAjBnB,4CA7L2C,8EA8P3C,wFACEA,GAAe,IACfwC,IAA8B,GAC9BF,GAA0B,cAC1BsC,YAAUpH,GAAI0F,MAAK,SAAAoB,GACL,MAARA,GACFC,GAAsB,mNACtBzC,IAA4B,GAC5BmB,KACA4B,YAAYrH,GAAI0F,MAAK,SAAAnG,GAAI,OAAIiC,EAAkBjC,EAAtB,KAEzBiD,GAAewE,GAAc,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,UAErCnC,GAA0B,SAC1BE,IAA8B,EAC/B,IAfH,4CA9P2C,sBA4U3C,SAASsC,GAAeL,GACtB7F,GAAmB,GACnBF,EAAiB+F,GACjBjG,GAAe,EAChB,CAED,SAAS+F,GAAsBE,GAC7B7F,GAAmB,GACnBF,EAAiB+F,GACjBjG,GAAe,EAChB,CAED,SAASgG,GAAeC,GACtB,GAAe,MAAXA,EAAiB,MAAO,iCAE5B,IAAIM,EAAaN,EAAQO,QAAQ,uBACjC,GAAID,EAAa,EACjB,CACE,IAAIE,EAAcR,EAAQnB,UAAUyB,EAAa,IACjD,OAAOE,EAAY3B,UAAU,EAAG2B,EAAYD,QAAQ,KACrD,CAED,OAAIP,EAAQS,OAAS,IAAY,iCAE1BT,CACR,CAED,OA/TAU,qBAAU,WAERlC,KAEAvF,YAAWF,GAAI0F,MAAK,SAAAnG,GAClBqC,GAASrC,GACT,IAAIqI,EAAkB,MAARrI,GAAgBA,IAASqB,EACvCkB,GAAS8F,GACLA,GACFC,YAAQ7H,GAAI0F,MAAK,SAAAnG,GAAI,OAAImC,EAAcnC,EAAlB,GAExB,IACD8H,YAAYrH,GAAI0F,MAAK,SAAAnG,GAAI,OAAIiC,EAAkBjC,EAAtB,GAC1B,GAAE,CAACS,EAAIY,IAmTN,mCACEyB,GACA,sBAAKyF,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,oCAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CAAOC,QAAQ,YAAYC,KAAMjH,EAAakH,QAAS,kBAAMjH,GAAe,EAArB,EAA6BkH,aAAW,EAA/F,SACE,oBAAGJ,UAAU,OAAb,UACK7G,EAECE,EACA,qCAAE,uBAAF,2CAA+C,wBAAQgH,KAAK,SAASL,UAAU,yBAAyBM,QArD5H,WACE3C,KACA4B,YAAYrH,GAAI0F,MAAK,SAAAnG,GAAI,OAAIiC,EAAkBjC,EAAtB,GAC1B,EAkDkE,4BAA/C,yCACI,oCAKd,sBAAKuI,UAAU,OAAf,UACE,eAAC,IAAD,CAAMA,UAAU,uBAAuBO,GAAG,IAA1C,UACE,qBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeX,UAAU,wBAAwBY,QAAQ,YAA7H,SACE,sBAAMC,EAAE,sHAFZ,gBAMA,yBAAQR,KAAK,SAASL,UAAU,4CAA4CM,QA7DxF,WACEQ,IAAcC,IAAIC,eAAe5J,6CAA4Cc,GAAI0F,MAAK,SAAAmD,GAChFE,KAAKC,OAAOC,KAAKC,MAAQ,IAAID,KAAKJ,EAAIM,kBAAkB,KAAS,IACnE7B,GAAe,2CAEjBsB,IAAcC,IAAIO,mBAAmBlK,6CAA4Cc,EAClF,GACF,EAsDiHqJ,UAAWxH,GAAjH,UACE,sBAAKyG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeX,UAAU,wBAAwBY,QAAQ,YAA7H,UACE,sBAAMY,SAAS,UAAUX,EAAE,oEAC3B,sBAAMA,EAAE,2GAHZ,yBAQF,qBAAKb,UAAU,iBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SAEE,eAAC,IAAD,CACEyB,iBAAiB,OACjBC,YAAY,EACZf,MAAI,EAHN,UAKE,eAAC,IAAD,CAAKgB,SAAS,OAAOC,MAAM,OAA3B,UACE,qBAAK5B,UAAU,sBAAsB6B,MAAO,CAACC,gBAAiB,YAAIvI,QAAJ,IAAIA,OAAJ,EAAIA,EAAUwI,mBAA5E,SACE,cAAC,gBAAD,CAAeC,eAAgBC,IAAcC,IAAG,OAAE3I,QAAF,IAAEA,OAAF,EAAEA,EAAU6E,MAAO4B,UAAU,YAAYmC,IAAI,GAC3FC,QAAS,YAAwB,IAArBC,EAAoB,EAApBA,cACV7C,GAAe,kEACf6C,EAAcH,IAAID,IAClBK,YAAW,WAAaD,EAAcH,IAAd,OAAkB3I,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU6E,KAAQ,GAAE,IAC/D,OAIFnE,IAAUF,IAAuB,MAAdJ,EAClB,mBAAG4I,KAAMnL,6FAAA,OAA2EuC,QAA3E,IAA2EA,OAA3E,EAA2EA,EAAY6I,cAAe,OAAQC,OAAO,SAASC,IAAI,sBAAsBC,UAAQ,EAAzK,SACE,yBAAQtC,KAAK,SAASL,UAAU,uCAAhC,UACE,sBAAKQ,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeX,UAAU,iBAAiBY,QAAQ,YAAtH,UACE,sBAAMC,EAAE,4IACR,sBAAMA,EAAE,yIAHZ,oBAQC,iCAIN5G,IAAUF,IAAuB,MAAdJ,EAClB,eAAC,IAAD,CAAKgI,SAAS,QAAQC,MAAM,QAA5B,UACA,qBAAK5B,UAAU,kCAAf,SACE,cAAC,gBAAD,CAAegC,eAAgBC,IAAcC,IAAK9K,6FAAA,OAA4EuC,QAA5E,IAA4EA,OAA5E,EAA4EA,EAAY6I,cAAe,OAAQxC,UAAU,YAAYmC,IAAI,GACzLC,QAAS,YAAwB,IAArBC,EAAoB,EAApBA,cACVA,EAAcH,IAAID,IAClBK,YAAW,WAAaD,EAAcH,IAAI9K,6FAAA,OAA4EuC,QAA5E,IAA4EA,OAA5E,EAA4EA,EAAY6I,cAAe,MAAS,GAAE,IAC7J,MAGL,mBAAGD,KAAMnL,6FAAA,OAA4EuC,QAA5E,IAA4EA,OAA5E,EAA4EA,EAAY6I,cAAe,OAAQC,OAAO,SAASC,IAAI,sBAAsBC,UAAQ,EAA1K,SACE,yBAAQtC,KAAK,SAASL,UAAU,uCAAhC,UACE,sBAAKQ,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeX,UAAU,iBAAiBY,QAAQ,YAAtH,UACE,sBAAMC,EAAE,4IACR,sBAAMA,EAAE,yIAHZ,uBASC,kCAIX,qBAAKb,UAAU,gBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,SAA2B,oCAAMzG,QAAN,IAAMA,OAAN,EAAMA,EAAUqJ,SACzC,qBAAK5C,UAAU,WAAf,UAEC/F,IAAUF,GACT,mCACE,qBAAKmI,IAAKW,EAAQ,KAA4CC,QAAS9C,UAAU,WAAWmC,IAAI,YAAY1B,MAAM,KAAKC,OAAO,KAAKJ,QAAS,kBAAMxB,IAAN,MAE1I,kCAIV,sBAAKkB,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,SAA2B,mCAAKzG,QAAL,IAAKA,OAAL,EAAKA,EAAUwJ,gBAC1C,qBAAK/C,UAAU,WAAf,UAEK/F,IAAUF,GACT,mCACE,qBAAKmI,IAAKW,EAAQ,KAA4CC,QAAS9C,UAAU,WAAWmC,IAAI,mBAAmB1B,MAAM,KAAKC,OAAO,KAAKJ,QAAS,kBAAMlB,IAAN,MAEjJ,kCAIZ,qBAAKY,UAAU,WAAf,SACI,6CAAe,4BAAIjG,GAAQ,MAAH,OAAWF,QAAX,IAAWA,OAAX,EAAWA,EAAOmJ,OAAO,GAAGC,gBAApD,SAEJ,qBAAKjD,UAAU,WAAf,SACI,gDAAkB,4BAAG,mBAAGuC,KAAI,OAAEhJ,QAAF,IAAEA,OAAF,EAAEA,EAAU2J,aAAnB,gBAAkC3J,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAU2J,aAAaF,OAAO,QAArF,SAEJ,qBAAKhD,UAAU,WAAf,SACI,uDAAyB,mCAAIvG,QAAJ,IAAIA,OAAJ,EAAIA,EAAgB0J,YAA7C,SAEJ,qBAAKnD,UAAU,WAAf,gBACGzG,QADH,IACGA,OADH,EACGA,EAAU+E,WAAW8E,KAAI,SAACC,EAAWC,GAAZ,OACxB,qBAAKtD,UAAU,qBAAf,SACE,cAAC,IAAD,CAAgBqD,UAAWA,KADYC,EADjB,MAM5B,qBAAKtD,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAYuD,KAAK,QAAhC,WAEGtJ,IAAUF,GAAS,qCAClB,yBAAQsG,KAAK,SAASL,UAAU,yCAAyCM,QAASxB,GAAlF,UACE,sBAAK0B,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeX,UAAU,sBAAsBY,QAAQ,YAA3H,UACE,sBAAMC,EAAE,2NACR,sBAAMW,SAAS,UAAUX,EAAE,wLAH/B,iBAOA,yBAAQR,KAAK,SAASL,UAAU,yCAAyCM,QAASlB,GAAlF,UACE,sBAAKoB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeX,UAAU,sBAAsBY,QAAQ,YAA3H,UACE,sBAAMC,EAAE,2NACR,sBAAMW,SAAS,UAAUX,EAAE,wLAH/B,2BASA,8BAGD5G,IAAUI,IAAaN,GACtB,yBAAQsG,KAAK,SAASL,UAAU,yCAAyCM,QA7SrG,WACE5D,GAAiB,GAWjB8G,YAActL,GAAI0F,MAAK,SAAA6F,GACrBrG,GAAcqG,EAAa,KAC5B,IAXD7G,GAA2B,sBAC3BI,GAA0B,SAC1BF,IAA+B,GAC/BI,IAA8B,GAC9BV,IAA4B,GAC5B9B,GAAe,GAChB,EAoS2B,UACE,qBAAK8F,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeX,UAAU,yBAAyBY,QAAQ,YAA9H,SACE,sBAAMC,EAAE,mIAFZ,WAMA,8BAGD5G,IAAUF,GACT,yBAAQsG,KAAK,SAASL,UAAU,sCAAsCM,QAzPlG,WACEP,YAAQ7H,GAAI0F,MAAK,SAAAnG,GACf+F,GAAqB,aACrB9C,GAAe,IACfgD,IAAyB,GACzBiB,GAAc,IACdvE,GAAmB3C,GACnB6F,IAA2B,EAC5B,GAEF,EA+O2B,UACE,qBAAKkD,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeX,UAAU,aAAaY,QAAQ,YAAlH,SACE,sBAAMC,EAAE,iSAFZ,UAMA,qDActB,eAAC,IAAD,CAAOX,KAAMvF,GAA2B+I,OAAQ,kBAAM9I,IAA6B,EAAnC,EAA2C+I,UAAQ,EAAnG,UACE,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,iCAEF,eAAC,IAAMC,KAAP,WACE,+BAAO,iBAAmB5G,GAAa,iCACvC,uBAAO6G,UAAW,GAAI3D,KAAK,OAAOL,UAAU,eAAexI,MAAOqD,GAAWoJ,SAAU,SAACC,GAAD,OAvdnElF,EAud+FkF,EAAE7B,cAAc7K,WAtd3IsD,GAAakE,EAAIX,QAAQ,6BAA8B,KADzD,IAA8BW,CAudmE,EAAoDmF,YAAY,aACvJ,sBAAMnE,UAAU,cAAhB,SAA+BvF,QAEjC,cAAC,IAAD,CAAS2J,MAAQ,CAAC,CAACxC,MAAO,sBAAuB,CAACA,MAAO,gBAAkByC,WAAatJ,GAAiBuJ,KAAM,GAAIC,eAAgB,EAAGC,SAAU,IAChJ,eAAC,IAAMC,OAAP,CAAczE,UAAU,yCAAxB,UACE,cAAC,IAAD,CAAQC,QAAQ,YAAYK,QA7ctC,WA8CE5F,GAAe,IACfc,IAA+B,GA7Cb,KAAdX,IACFK,GAA4B,gBAC5BE,IAAgC,GAChCmE,YAAYrH,GAAI0F,MAAK,SAAAnG,GACnB,IAAMoH,EAAYrG,YAAaf,EAAKgB,UACpCnB,YAAQF,6CAA0CyH,GAAWjB,MAAK,SAAAoB,GACpD,MAARA,GACFhE,GAAkB,GAClBQ,IAA+B,GAC/BN,GAA4B,cAE5BR,GAAewE,GAAc,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,UACnC/D,IAAgC,GAChCF,GAA4B,sBAE/B,GACF,KAEDR,GAAe,6BAElB,EAubiE6G,SAAUpG,GAAlE,SACIF,KAEJ,cAAC,IAAD,CAAQgF,QAAQ,UAAUsB,SAAUhG,GAA6B+E,QAljBhC,4CAkjBjC,SACIjF,WAKR,eAAC,IAAD,CAAO6E,KAAMzE,GAAkCiI,OAAQ,kBAAMhI,IAAoC,EAA1C,EAAkDiI,UAAQ,EAAjH,UACE,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,wCAEF,eAAC,IAAMC,KAAP,WACE,+BAAO,iBAAmB5G,GAAa,wCACvC,0BAAU6G,UAAW,IAAKU,KAAM,GAAIC,KAAM,EAAG3E,UAAU,eAAexI,MAAOmE,GAAkBsI,SAAU,SAACC,GAAD,OAxa9ElF,EAwaiHkF,EAAE7B,cAAc7K,WAvapKoE,GAAoBoD,EAAIX,QAAQ,6BAA8B,KADhE,IAAqCW,CAwa8E,EAA2DmF,YAAY,oBAChL,sBAAMnE,UAAU,cAAhB,SAA+BvF,QAEjC,cAAC,IAAD,CAAS2J,MAAQ,CAAC,CAACxC,MAAO,sBAAuB,CAACA,MAAO,uBAAyByC,WAAaxI,GAAwByI,KAAM,GAAIC,eAAgB,EAAGC,SAAU,IAC9J,eAAC,IAAMC,OAAP,CAAczE,UAAU,yCAAxB,UACE,cAAC,IAAD,CAAQC,QAAQ,YAAYK,QA9ZtC,WA8CE5F,GAAe,IACf4B,IAAsC,GA7Cb,KAArBX,IACFK,GAAmC,gBACnCE,IAAuC,GACvCqD,YAAYrH,GAAI0F,MAAK,SAAAnG,GACnB,IAAMoH,EAAYrG,YAAaf,EAAKgB,UACpCnB,YAAQF,6CAA0CyH,GAAWjB,MAAK,SAAAoB,GACpD,MAARA,GACFlD,GAAyB,GACzBQ,IAAsC,GACtCN,GAAmC,cAEnCtB,GAAewE,GAAc,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,UACnCjD,IAAuC,GACvCF,GAAmC,sBAEtC,GACF,KAEDtB,GAAe,oCAElB,EAwYwE6G,SAAUtF,GAAzE,SACIF,KAEJ,cAAC,IAAD,CAAQkE,QAAQ,UAAUsB,SAAUlF,GAAoCiE,QAtkBvC,4CAskBjC,SACInE,WAKR,eAAC,IAAD,CAAO+D,KAAM3D,GAA0BmH,OAAQ,kBAAMlH,IAA4B,EAAlC,EAA0CmH,UAAQ,EAAjG,UACE,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,2BAEF,eAAC,IAAMC,KAAP,WACE,+BAAO,iBAAmB5G,GAAa,8EAAmF,uBAC1H,sBAAM6C,UAAU,cAAhB,SAA+BvF,QAEjC,cAAC,IAAD,CAAS2J,MAAQ,CAAC,CAACxC,MAAO,sBAAuB,CAACA,MAAO,eAAiByC,WAAa5H,GAAgB6H,KAAM,GAAIC,eAAgB,EAAGC,SAAU,IAC9I,eAAC,IAAMC,OAAP,CAAczE,UAAU,yCAAxB,UACE,cAAC,IAAD,CAAQC,QAAQ,YAAYK,QA5WtC,WAuCE5F,GAAe,IACfwC,IAA8B,GAtC9BN,GAA2B,gBAC3BE,IAA+B,GAC/B0G,YAActL,GAAI0F,MAAK,SAAAiB,GACrBvH,YAAQF,6CAA0CyH,GAAWjB,MAAK,SAAAoB,GACpD,MAARA,GACFtC,GAAiB,GACjBQ,IAA8B,GAC9BN,GAA2B,cAE3BlC,GAAewE,GAAc,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,UACnCrC,IAA+B,GAC/BF,GAA2B,sBAE9B,GACF,GAEF,EA0VqE2E,SAAU1E,GAAtE,SACIF,KAEJ,cAAC,IAAD,CAAQsD,QAAQ,UAAUsB,SAAUtE,GAA4BqD,QAzlB/B,4CAylBjC,SACIvD,WAKR,eAAC,IAAD,CAAOmD,KAAM7C,GAAyBqG,OAAQ,kBAAMpG,IAA2B,EAAjC,EAAyCqG,UAAQ,EAA/F,UACE,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,0BAEF,eAAC,IAAMC,KAAP,WACmB,OAAf5J,SAAe,IAAfA,OAAiBF,QAAUA,GAC3B,mCACE,wFAGF,mCACE,2EAA8CkD,GAA9C,YAAkE,uBAAlE,iFAKJ,uBAAK,uBACL,qBAAK6C,UAAU,cAAf,SACmB,OAAf7F,SAAe,IAAfA,OAAiBF,QAAUA,GAC5B,6BAEC,qCACE,iCACkC,KAAhB,OAAdR,QAAc,IAAdA,OAAA,EAAAA,EAAgB0J,WACf,yCAAG,0FAAgE,0BACnE,6BAEH,8EAEF,uBACA,sBAAMnD,UAAU,cAAhB,SAA+BvF,aAKvC,cAAC,IAAMgK,OAAP,CAAczE,UAAU,yCAAxB,SACmB,OAAf7F,SAAe,IAAfA,OAAiBF,QAAUA,GAC3B,cAAC,IAAD,CAAQgG,QAAQ,YAAYK,QAAS,kBAAMhD,IAA2B,EAAjC,EAArC,qBAIA,qCACE,cAAC,IAAD,CAAQ2C,QAAQ,SAASK,QAtWvC,WAEE5F,GAAe,IACf8C,GAAqB,gBACrBE,IAAyB,GAEzBpF,YAAWlB,6CAA0Cc,GAAI0F,MAAK,SAAAoB,GAChD,MAARA,GACFxB,GAAqB,cACrBoH,YAAS1M,GAAI0F,MAAK,SAAAoB,GACJ,MAARA,GACF1B,IAA2B,GAC3B2B,GAAsB,kGAEtBvE,GAAewE,GAAc,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,UACnC3B,GAAqB,aACrBE,IAAyB,GAE5B,MAEDhD,GAAewE,GAAc,OAACF,QAAD,IAACA,OAAD,EAACA,EAAKG,UACnC3B,GAAqB,aACrBE,IAAyB,GAE5B,GACF,EA6UyD6D,SAAU9D,GAAtD,SACIF,KAEJ,cAAC,IAAD,CAAQ0C,QAAQ,YAAYK,QAAS,kBAAMhD,IAA2B,EAAjC,EAArC,+BASP,8BAKR,C,otMChqBcuH,IAbf,YAAwC,IAAdxB,EAAa,EAAbA,UACxB,OACE,mCACA,qBAAKrD,UAAU,OAAf,SACI,sBAAKA,UAAU,4BAAf,UACI,oBAAIA,UAAU,mDAAd,SAAmEqD,EAAUyB,WAAazB,EAAUyB,WAAa,aACjH,oBAAI9E,UAAU,0BAAd,SAA0CqD,EAAU7L,cAK/D,C,gOCgBcuN,MAtBf,YAAqC,IAAlBC,EAAiB,EAAjBA,cACjB,OACE,mCACA,qBAAKhF,UAAU,8CAAf,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,IAAD,CAAMA,UAAU,eAAeO,GAAG,IAAlC,SAAsC,qDACtC,wBAAQP,UAAU,iBAAiBK,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAML,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2B9H,GAAG,yBAA7C,UACI,oBAAI8H,UAAU,oCAEd,qBAAKA,UAAU,SAASuD,KAAK,SAA7B,SACKyB,aAOpB,E,oECgEcC,MAlFf,YAA8C,IAArBC,EAAoB,EAApBA,iBACrB,EAAkClM,mBAAS,MAA3C,mBAAOmM,EAAP,KAAkBC,EAAlB,KACA,EAA8BpM,mBAAS,IAAvC,mBAAOzB,EAAP,KAAgB8N,EAAhB,KACA,EAA4BrM,mBAAS,GAArC,mBAAOsM,EAAP,KAAeC,EAAf,KACA,EAAsCvM,mBAAS,MAA/C,mBAAOwM,EAAP,KAAoBC,EAApB,KACA,EAAwBzM,oBAAS,GAAjC,mBAAOkH,EAAP,KAAawF,EAAb,KALyC,SAuB1BV,IAvB0B,qFAuBzC,8GACyBG,EAAUQ,UADnC,OAEEC,EADMC,EADR,QAGyB,IAAIjP,YAAUC,aAAagP,GACnC5O,YAAY6O,aAAalI,MAAK,SAAAmI,GAC3CV,EAAWU,GACXb,EAAiBa,EAClB,IAPH,4CAvByC,4EAiCzC,wGACUZ,EAAUa,sBADpB,OAEIX,EAAW,IAFf,4CAjCyC,4EAsCzC,wFACEY,EAAY1O,GACZmO,GAAQ,GAFV,4CAtCyC,+BA2C1BO,EA3C0B,wFA2CzC,WAA2BF,GAA3B,2EACEjO,YAAeiO,GAAanI,MAAK,SAAAnG,GAE7B8N,EAAUtE,KAAKiF,MAAMzO,EAAO,MAAqB,IACpD,IACDO,YAAe+N,GAAanI,MAAK,SAAAnG,GAC7BgO,EAAehO,EAAKmB,WACvB,IAPH,4CA3CyC,+BAqD1BgN,EArD0B,wFAqDzC,WAA4BO,GAA5B,2EACMA,EAAkBC,GAAG,mBAAmB,SAACC,GACzCvP,OAAOwP,SAASC,QACjB,IAGDJ,EAAkBC,GAAG,gBAAgB,SAACI,GACpC1P,OAAOwP,SAASC,QACjB,IARL,4CArDyC,sBAgEzC,OAzDA1G,qBAAU,WAEN,IAAM4G,EAAe,IAAIC,IAAU,CACjCC,eAAe,EACfC,QAAS,YAGXxB,EAAaqB,EAChB,GAAE,IAEH5G,qBAAU,WACHsF,GAAaA,EAAU0B,gBACxB7B,GAEL,GAAE,CAACG,IA4CF,mCACI5N,EACA,qCACI,cAACuP,EAAA,EAAD,CAAO3G,QAAS,kBAAMuF,GAAQ,EAAd,EAAsBxF,KAAMA,EAAM6G,MAAO,IAAMC,UAAQ,EAAvE,SACE,cAACF,EAAA,EAAM/C,KAAP,UAAY,gCAAK,sBAAK/D,UAAU,iBAAf,UAAiCsF,EAAjC,aAAqD,sBAAKtF,UAAU,iBAAf,UAAiCwF,EAAjC,yBAExE,yBAAQxF,UAAU,8BAA8BK,KAAK,SAASC,QAvE/B,2CAuE/B,wBAAqG/I,EAAQyL,OAAO,GAAGC,iBACvH,wBAAQjD,UAAU,iCAAiCK,KAAK,SAASC,QAAS,kBAxE3C,0CAwEiD2G,EAAN,EAA1E,6BAIJ,wBAAQ5G,KAAK,SAASL,UAAU,0BAA0BM,QAAS0E,EAAnE,6BAIT,E,OCrEcP,MAhBf,WACE,OACE,mCACA,8BACE,wBAAQzE,UAAU,mCAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,mBAAGA,UAAU,6BAAb,gDAQT,E,0CC2BckH,MAtCf,YAA0B,IAAVC,EAAS,EAATA,MACd,EAAiCnO,mBAAS,MAA1C,mBAAQO,EAAR,KAAkB6N,EAAlB,KACMC,EAAWC,cAejB,OAbAzH,qBAAU,WACR,UAAIsH,QAAJ,IAAIA,KAAOI,YAAY,CACrB,IAAItJ,EAAOkJ,EAAMI,YACjB,OAAItJ,QAAJ,IAAIA,KAAMG,QACRH,EAAKG,MAAQH,EAAKG,MAAMC,QAAQ,UAAW,kCAE7C+I,EAAWnJ,EACZ,CACF,GAAC,CAACkJ,IAMD,sBAAKnH,UAAU,sBAAsBM,QAJvC,WACE+G,EAAS,UAAD,OAAWF,EAAMK,SAC1B,EAEC,UACA,qBAAKxH,UAAU,cAAc6B,MAAO,CAACC,gBAAiB,YAAIvI,QAAJ,IAAIA,OAAJ,EAAIA,EAAUwI,mBAApE,SACE,qBACE/B,UAAU,eACVoC,QAAS,YAAwB,IAArBC,EAAoB,EAApBA,cACVA,EAAcH,IAAID,IAClBK,YAAW,WAAaD,EAAcH,IAAd,OAAkB3I,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU6E,KAAQ,GAAE,IAC/D,EACD8D,KAAa,OAAR3I,QAAQ,IAARA,OAAA,EAAAA,EAAUqJ,MAAO,UACtBT,IAAI,UAIR,qBAAKnC,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,gBAA4BzG,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAUqJ,WAI3C,ECgCc6E,MApEf,YAAqE,IAAjDC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,WAAY7O,EAA4B,EAA5BA,iBAAkByB,EAAU,EAAVA,OACxD,EAAuCvB,mBAAS,IAAhD,mBAAQ4O,EAAR,KAAqBC,EAArB,KACA,EAA+C7O,mBAAS,MAAxD,mBAAQ8O,EAAR,KAAwBC,EAAxB,KAQA,SAASC,EAAU9D,GACjB,IAAM+D,EAAa/D,EAAEzB,OAAOyF,UAAYC,SAASjE,EAAEzB,OAAOyF,WAAY,EACtEL,EAAeH,EAAO1E,MAAO5L,MAAsC6Q,EAAW,GAAI7Q,KAAqC6Q,IAEvHG,EAAiBH,EAClB,CAED,SAASG,EAAiBH,GAGxB,IAFA,IAAII,EAAapH,KAAKqH,KAAKX,EAAYvQ,MACnCmR,EAAQ,GACHC,EAAS,EAAGA,GAAUH,EAAYG,IACzCD,EAAME,KACJ,cAACC,EAAA,EAAWxB,KAAZ,CAA8ByB,OAAQH,IAAWP,EAAY3H,QAAS0H,EAAtE,SACGQ,GADmBA,IAM1BT,EAAmBQ,EACpB,CAED,OA3BA1I,qBAAU,WAERgI,EAAeH,EAAO1E,MAAM,EAAG5L,OAC/BgR,EAAiB,EAClB,GAAE,CAACV,IAwBF,mCACE,sBAAK1H,UAAU,MAAf,UACG0H,EAAO9H,OAAS,EACfgI,EAAYxE,KAAI,SAAC+D,EAAO7D,GAAR,OACd,qBAAKtD,UAAU,WAAf,SACI,cAAC,EAAD,CAAMmH,MAAOA,KADc7D,EADjB,IAKd,6BAEHoE,EAAO9H,OAASxI,KACf,cAACsR,EAAA,EAAD,CAAY1I,UAAU,yBAAtB,SAAgD8H,IAE9C,6BAEkB,OAArBhP,EACC,sEAEE,6BAEiB,MAApBA,GAA8C,IAAlB4O,EAAO9H,QAAiBrF,EAGjD,6BAFF,6CAImB,MAApBzB,GAA8C,IAAlB4O,EAAO9H,QAAgBrF,EAClD,qEAEE,iCAMX,E,SChBcqO,MAhDf,YAAsC,IAArB9P,EAAoB,EAApBA,iBACf,EAAwCE,mBAAS,IAAjD,mBAAQ6P,EAAR,KAAqBC,EAArB,KACA,EAAwC9P,oBAAS,GAAjD,mBAAQC,EAAR,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAQ2O,EAAR,KAAoBoB,EAApB,KACA,EAA8B/P,oBAAS,GAAvC,mBAAQuB,EAAR,KAAgBC,EAAhB,KAyBA,OAvBAqF,qBAAU,WACR,GAAI/G,EAAiB,CAAC,IACLkQ,EADI,iDACnB,kGACExO,GAAU,GACNyO,EAAU,KACVvB,EAAS,GAHf,WAISuB,EAJT,iCAKkBnI,IAAcC,IAAImI,gBAAgBpQ,EAAkB,CAACmQ,QAAQA,EAASE,kBAAkB,CAAC/R,gDAL3G,UAKQgS,EALR,OAMIH,EAAUG,EAAEH,QACZvB,EAAOe,KAAP,MAAAf,EAAM,YAAS0B,EAAEC,YACjBN,EAAcrB,EAAO9H,UACjB8H,EAAO9H,QAAUxI,OATzB,4EAYE0R,EAAepB,GACflN,GAAU,GAbZ,4CADmB,qDAgBnBwO,GACD,CAEF,GAAE,CAAClQ,IAIF,mCACE,qBAAKkH,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAACsJ,EAAA,EAAD,CAAOrJ,QAAQ,YAAYC,KAAMjH,EAAakH,QAAS,kBAAMjH,GAAe,EAArB,EAA6BkH,aAAW,EAA/F,mGAGA,cAAC,EAAD,CAAUsH,OAAQmB,EAAalB,WAAYA,EAAY7O,iBAAkBA,EAAkByB,OAAQA,cAQhH,E,SCtBcgP,MArBf,WACE,MAAiDvQ,mBAAS,MAA1D,mBAAQF,EAAR,KAA0B0Q,EAA1B,KAMA,OACE,qCACE,cAAC,EAAD,CAAQxE,cAAe,cAAC,EAAD,CAAeE,iBAN1C,SAAgClG,GAC9BwK,EAAoBxK,EACrB,MAKG,qBAAKgB,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyJ,KAAK,IAAIC,QAAS,cAAC,EAAD,CAAM5Q,iBAAkBA,MACjD,cAAC,IAAD,CAAO2Q,KAAK,YAAYC,QAAS,cAAC7Q,EAAA,EAAD,CAAaC,iBAAkBA,WAGpE,cAAC,EAAD,MAGL,ECjBc6Q,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjM,MAAK,YAAkD,IAA/CkM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,E,cCDYO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACI,cAAC,EAAD,SAQRb,G,kCCrBA,aAEMc,EAAW,CACbC,OAAQtT,mCACRwP,QAAS+D,IAAQC,eAGfC,EAAU,IAAIC,IAAQL,GAEbI,K,0ICLTnU,EAAkB,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UAC3DG,EAAW,IAAIP,IAAOQ,SAASC,6CAAyCC,EAAMX,GAE7E,SAAe6I,EAAtB,kC,sDAAO,WAA2B+D,GAA3B,iGACgBpM,EAASqI,YAAY+D,GADrC,cACG7L,EADH,yBAEIA,GAFJ,4C,sBAKA,SAAesI,EAAtB,kC,sDAAO,WAAuBuD,GAAvB,iGACgBpM,EAAS6I,QAAQuD,GADjC,cACG7L,EADH,yBAEIA,GAFJ,4C,wDCZQ,QAA0B,mC,wPCInCf,EAAkB,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UAC3DC,EAASN,EAAgBO,YACzBC,EAAW,IAAIP,IAAOQ,SAASC,6CAA0CC,EAAKL,GAE7E,SAAe+H,EAAtB,oC,sDAAO,WAAuByI,EAASuD,GAAhC,0GAEoB7T,EAAS6H,QAAQyI,EAASuD,GAF9C,cAEOtT,EAFP,gBAGOf,EAAgBgB,mBAAmBD,EAAKE,MAH/C,uBAIOmJ,IAAcC,IAAIO,mBAAmBlK,6CAA4CoQ,GAJxF,gCAKQ,KALR,yCAOC5P,QAAQoT,MAAR,MAPD,mF,sBAYA,SAAe3L,EAAtB,oC,sDAAO,WAA8BmI,EAASyD,GAAvC,0GAEoB/T,EAASmI,eAAemI,EAASyD,GAFrD,cAEOxT,EAFP,gBAGOf,EAAgBgB,mBAAmBD,EAAKE,MAH/C,uBAIOmJ,IAAcC,IAAIO,mBAAmBlK,6CAA4CoQ,GAJxF,gCAKQ,KALR,yCAOC5P,QAAQoT,MAAR,MAPD,mF,sBAYA,SAAepG,EAAtB,kC,sDAAO,WAAwB4C,GAAxB,0GAEoBtQ,EAAS0N,SAAS4C,GAFtC,cAEO/P,EAFP,gBAGOf,EAAgBgB,mBAAmBD,EAAKE,MAH/C,uBAIOmJ,IAAcC,IAAIO,mBAAmBlK,6CAA4CoQ,GAJxF,gCAKQ,KALR,yCAOC5P,QAAQoT,MAAR,MAPD,mF,sBAYA,SAAexH,EAAtB,kC,sDAAO,WAA6BtL,GAA7B,iGACgBhB,EAASsM,cAActL,GADvC,cACGT,EADH,yBAEIA,GAFJ,4C,sBAKA,SAAe6H,EAAtB,kC,sDAAO,WAAyBkI,GAAzB,0GAEoBtQ,EAASoI,UAAUkI,GAFvC,cAEO/P,EAFP,gBAGOf,EAAgBgB,mBAAmBD,EAAKE,MAH/C,gCAKQ,KALR,uCAOCC,QAAQoT,MAAR,MAPD,kF","file":"static/js/main.077ce7ff.chunk.js","sourcesContent":["import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/erc20.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_ERC20_TOKEN_ADDRESS, abi, signer)\n\nexport async function approve(address, value){\n    try {\n        const data = await contract.approve(address, value)\n        await polygonProvider.waitForTransaction(data.hash)\n        return '1';\n    } catch (error) {\n        console.log(error)\n        return error;\n    }\n}\n\nexport async function getOwnedEmojis(address){\n    const data = await contract.balanceOf(address);\n    return data;\n}","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/erc721.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, abi, signer)\n\nexport async function getOwnedTokens(address){\n    const data = await contract.balanceOf(address);\n    return data;\n}\n\nexport async function getTokenURI(id){\n    const data = await contract.tokenURI(id);\n    return data;\n}\n\nexport async function getOwnerOf(id){\n    const data = await contract.ownerOf(id);\n    return data;\n}\n\nexport async function approvenft(address, value){\n    try {\n        const data = await contract.approve(address, value)\n        await polygonProvider.waitForTransaction(data.hash)\n        return '1';\n    } catch (error) {\n        console.log(error)\n        return error;\n    }\n}","import { ethers } from \"ethers\";\n\nconst coinValues = {\n    1: 1, \n    2: 10,\n    3: 50,\n    4: 200,\n    10: 100, \n    11: 500,\n    12: 1000, \n    20: 4000, \n    21: 200000,\n    22: 400000\n}\n\nexport async function getCoinPrice(coinType){\n    return coinValues[coinType] ? ethers.utils.parseEther(coinValues[coinType].toString())  : false;\n}","export default __webpack_public_path__ + \"static/media/pencil-square.75d078b5.svg\";","import { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { getCoinPrice } from \"../lib/helpers\";\nimport { getCoinFull, getCoin } from \"../lib/datastorage\";\nimport { setName, setDescription, burnCoin, getClonePrice, cloneCoin} from \"../lib/userAccess\";\nimport { approve } from \"../lib/erc20\";\nimport { approvenft, getTokenURI, getOwnerOf } from \"../lib/erc721\";\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Stepper from \"react-stepper-horizontal/lib/Stepper\";\nimport TokenAttribute from \"../components/TokenAttribute\";\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport LoadingImage from \"../assets/images/loading.gif\";\nimport alchemyClient from \"../lib/alchemyClient\";\nimport \"../assets/css/ItemDetails.css\";\n\nfunction ItemDetails( { accountConnected } ) {\n  const { id } = useParams();\n  const [ showMessage, setShowMessage ] = useState(false);\n  const [ headerMessage, setHeaderMessage ] = useState(null);\n  const [ showRefreshLink, setShowRefreshLink ] = useState(true);\n  const [ metadata, setMetadata ] = useState(null);\n  const [ coinFullDetail, setCoinFullDetail] = useState(null);\n  const [ coinDetail, setCoinDetail] = useState(null);\n  const [ owner, setOwner ] = useState(null);\n  const [ owned, setOwned ] = useState(false);\n  const [ locked, setLocked ] = useState(false);\n  const [ dataStorageCoin, setDataStorageCoin] = useState(null);\n  const [ cloneable, setCloneable ] = useState(false);\n  const [ loaded, setLoaded ] = useState(false);\n  const [ inputErrors, setInputErrors ] = useState(\"\");\n  const [ nameChangeModalVisibiltiy, setNameChangeModalVisibiltiy] = useState(false);\n  const [ tokenName, setTokenName ] = useState(\"\");\n  const [ nameChangeStep, setNameChangeStep ] = useState(0);\n  const [ nameChangeApproveBtnText, setNameChangeApproveBtnText] = useState(\"Approve\");\n  const [ nameChangeApproveBtnDisabled, setNameChangeApproveBtnDisabled] = useState(false);\n  const [ nameChangeActionBtnText, setNameChangeActionBtnText] = useState(\"Change Name\");\n  const [ nameChangeActionBtnDisabled, setNameChangeActionBtnDisabled] = useState(false);\n  const [ descriptionChangeModalVisibiltiy, setDescriptionChangeModalVisibiltiy] = useState(false);\n  const [ tokenDescription, setTokenDescription ] = useState(\"\");\n  const [ descriptionChangeStep, setDescriptionChangeStep ] = useState(0);\n  const [ descriptionChangeApproveBtnText, setDescriptionChangeApproveBtnText] = useState(\"Approve\");\n  const [ descriptionChangeApproveBtnDisabled, setDescriptionChangeApproveBtnDisabled] = useState(false);\n  const [ descriptionChangeActionBtnText, setDescriptionChangeActionBtnText] = useState(\"Change Description\");\n  const [ descriptionChangeActionBtnDisabled, setDescriptionChangeActionBtnDisabled] = useState(false);\n  const [ cloneCoinModalVisibiltiy, setCloneCoinModalVisibiltiy] = useState(false);\n  const [ cloneCoinStep, setCloneCoinStep ] = useState(0);\n  const [ cloneCoinApproveBtnText, setCloneCoinApproveBtnText] = useState(\"Approve\");\n  const [ cloneCoinApproveBtnDisabled, setCloneCoinApproveBtnDisabled] = useState(false);\n  const [ cloneCoinActionBtnText, setCloneCoinActionBtnText] = useState(\"Clone\");\n  const [ cloneCoinActionBtnDisabled, setCloneCoinActionBtnDisabled] = useState(false);\n  const [ emojiCount, setEmojiCount ] = useState(0);\n  const [ burnCoinModalVisibility, setBurnCoinModalVisibility] = useState(false);\n  const [ burnActionBtnText, setBurnActionBtnText] = useState(\"Burn\");\n  const [ burnActionBtnDisabled, setBurnActionBtnDisabled] = useState(false);\n  \n  useEffect(() => {\n\n    loadCoinMetadata();\n\n    getOwnerOf(id).then(data => {\n      setOwner(data);\n      let isOwned = data != null && data === accountConnected;\n      setOwned(isOwned);\n      if (isOwned) {\n        getCoin(id).then(data => setCoinDetail(data));\n      }\n    });\n    getCoinFull(id).then(data => setCoinFullDetail(data));\n  }, [id, accountConnected]);\n\n  function loadCoinMetadata() {\n    getTokenURI(id).then(data => {\n\n      let base64ToString = Buffer.from(data.substring(29), \"base64\").toString();\n      let meta = JSON.parse(base64ToString);\n\n      if (meta?.image){\n        meta.image = meta.image.replace(\"ipfs://\", process.env.REACT_APP_IPFS_GATEWAY);\n      }\n      if (meta?.attributes){\n        const isCloneable = meta?.attributes.find(attr => attr.value === \"Cloneable\");\n        const isLocked = meta?.attributes.find(attr => attr.value === \"Locked\");\n        setCloneable(isCloneable);\n        setLocked(isLocked);\n      }\n      setMetadata(meta);\n      setLoaded(true);      \n    });\n  }\n  \n  function setEmojiPrice(multiplier){\n      getCoinPrice(coinFullDetail?.coinType).then(coinPrice => {\n        setEmojiCount(multiplier * coinPrice / 1000000000000000000);\n      });\n  }\n\n  // Change Name Modal -----------------------------------------------------------------\n\n  function handleTokenNameInput(val){\n    setTokenName(val.replace(/[^[ A-Za-z0-9_@/#+$!\\d*]/ig, \"\"))\n  }\n\n  function nameChangeModalShow(){\n    setNameChangeStep(0);\n    setEmojiPrice(0.5);\n    setNameChangeApproveBtnText(\"Approve Emoji Burn\");\n    setNameChangeActionBtnText(\"Change Name\");\n    setNameChangeApproveBtnDisabled(false);\n    setNameChangeActionBtnDisabled(true);\n    setNameChangeModalVisibiltiy(true);\n    setInputErrors(\"\");\n  }\n\n  function nameChangeApprove(){\n    resetNameChangeModalFields();\n    if (tokenName !== \"\"){\n      setNameChangeApproveBtnText(\"Approving...\");\n      setNameChangeApproveBtnDisabled(true);\n      getCoinFull(id).then(data => {\n        const coinPrice = getCoinPrice(data.coinType);\n        approve(process.env.REACT_APP_USERACCESS_ADDRESS, coinPrice).then(val => {\n          if (val === \"1\"){\n            setNameChangeStep(1);\n            setNameChangeActionBtnDisabled(false);\n            setNameChangeApproveBtnText(\"Approved\");\n          }else{\n            setInputErrors(extractMessage(val?.message));\n            setNameChangeApproveBtnDisabled(false)\n            setNameChangeApproveBtnText(\"Approve Emoji Burn\");\n          }\n        })\n      })\n    } else {\n      setInputErrors(\"Coin name must be provided\");\n    }\n  }\n\n  async function changeName(){\n    setInputErrors(\"\");\n    if (tokenName !== \"\"){\n      setNameChangeActionBtnDisabled(true);\n      setNameChangeActionBtnText(\"Changing...\");\n      setName(id, tokenName).then(val => {\n        if (val === \"1\"){\n          displayMessageRefresh(\"Coin name was changed successfully! Click 'Refresh Metadata' if changes are  not reflected on 'My Gallery'. Refresh Metadata on Opensea gallery to see changes on Opensea.\");\n          setNameChangeModalVisibiltiy(false);\n          loadCoinMetadata();\n        }else{\n          setInputErrors(extractMessage(val?.message));\n        }\n        setNameChangeActionBtnText(\"Change Name\");\n        setNameChangeActionBtnDisabled(false);\n      })\n    }else{\n      setInputErrors(\"Coin name must be provided\");\n    }\n  }\n\n  function resetNameChangeModalFields(){\n    setInputErrors(\"\");\n    setNameChangeActionBtnDisabled(true);\n  }\n\n  // Change Description Modal -----------------------------------------------------------------\n\n  function handleTokenDescriptionInput(val){\n    setTokenDescription(val.replace(/[^[ A-Za-z0-9_@/#+$!\\d*]/ig, \"\"))\n  }\n\n  function descriptionChangeModalShow(){\n    setDescriptionChangeStep(0);\n    setEmojiPrice(1);\n    setDescriptionChangeApproveBtnText(\"Approve Emoji Burn\");\n    setDescriptionChangeActionBtnText(\"Change Description\");\n    setDescriptionChangeApproveBtnDisabled(false);\n    setDescriptionChangeActionBtnDisabled(true);\n    setDescriptionChangeModalVisibiltiy(true);\n    setInputErrors(\"\");\n  }\n\n  function descriptionChangeApprove(){\n    resetDescriptionChangeModalFields();\n    if (tokenDescription !== \"\"){\n      setDescriptionChangeApproveBtnText(\"Approving...\");\n      setDescriptionChangeApproveBtnDisabled(true);\n      getCoinFull(id).then(data => {\n        const coinPrice = getCoinPrice(data.coinType);\n        approve(process.env.REACT_APP_USERACCESS_ADDRESS, coinPrice).then(val => {\n          if (val === \"1\"){\n            setDescriptionChangeStep(1);\n            setDescriptionChangeActionBtnDisabled(false);\n            setDescriptionChangeApproveBtnText(\"Approved\");\n          } else {\n            setInputErrors(extractMessage(val?.message));\n            setDescriptionChangeApproveBtnDisabled(false);\n            setDescriptionChangeApproveBtnText(\"Approve Emoji Burn\");\n          }\n        })\n      })\n    } else {\n      setInputErrors(\"Coin description must be provided\");\n    }\n  }\n\n  async function changeDescription(){\n    setInputErrors(\"\");\n    if (tokenDescription !== \"\"){\n      setDescriptionChangeActionBtnDisabled(true);\n      setDescriptionChangeActionBtnText(\"Changing...\");\n      setDescription(id, tokenDescription).then(val => {\n        if (val === \"1\"){\n          displayMessageRefresh(\"Coin description was changed successfully! Click 'Refresh Metadata' if changes are  not reflected on 'My Gallery'. Refresh Metadata on Opensea gallery to see changes on Opensea.\");\n          setDescriptionChangeModalVisibiltiy(false);\n          loadCoinMetadata();\n        } else {\n          setInputErrors(extractMessage(val?.message));\n        }\n        setDescriptionChangeActionBtnText(\"Change Description\");\n        setDescriptionChangeActionBtnDisabled(false);\n      })\n    }else{\n      setInputErrors(\"Coin description must be provided\");\n    }\n  }\n\n  function resetDescriptionChangeModalFields(){\n    setInputErrors(\"\");\n    setDescriptionChangeActionBtnDisabled(true);\n  }\n\n  // Clone Coin Modal -----------------------------------------------------------------\n\n  function cloneCoinModalShow(){\n    setCloneCoinStep(0);\n    setCloneEmojiCount();\n    setCloneCoinApproveBtnText(\"Approve Emoji Burn\");\n    setCloneCoinActionBtnText(\"Clone\");\n    setCloneCoinApproveBtnDisabled(false);\n    setCloneCoinActionBtnDisabled(true);\n    setCloneCoinModalVisibiltiy(true);\n    setInputErrors(\"\");\n  }\n\n  function setCloneEmojiCount(){\n    getClonePrice(id).then(clonePrice => {\n      setEmojiCount(clonePrice / 1000000000000000000);\n    });\n}\n\n  function cloneCoinApproveClick(){\n    resetCloneCoinModalFields();\n    setCloneCoinApproveBtnText(\"Approving...\");\n    setCloneCoinApproveBtnDisabled(true);\n    getClonePrice(id).then(coinPrice => {\n      approve(process.env.REACT_APP_USERACCESS_ADDRESS, coinPrice).then(val => {\n        if (val === \"1\"){\n          setCloneCoinStep(1);\n          setCloneCoinActionBtnDisabled(false);\n          setCloneCoinApproveBtnText(\"Approved\");\n        } else {\n          setInputErrors(extractMessage(val?.message));\n          setCloneCoinApproveBtnDisabled(false);\n          setCloneCoinApproveBtnText(\"Approve Emoji Burn\");\n        }\n      })\n    })\n\n  }\n\n  async function cloneCoinClick(){\n    setInputErrors(\"\");\n    setCloneCoinActionBtnDisabled(true);\n    setCloneCoinActionBtnText(\"Cloning...\");\n    cloneCoin(id).then(val => {\n      if (val === \"1\"){\n        displayMessageRefresh(\"The Coin was cloned successfully and shortly will arrive in your wallet! Click 'Refresh Metadata' if changes are  not reflected on 'My Gallery'. Refresh Metadata on Opensea gallery to see changes on Opensea.\");\n        setCloneCoinModalVisibiltiy(false);\n        loadCoinMetadata();\n        getCoinFull(id).then(data => setCoinFullDetail(data));\n      } else {\n        setInputErrors(extractMessage(val?.message));\n      }\n      setCloneCoinActionBtnText(\"Clone\");\n      setCloneCoinActionBtnDisabled(false);\n    })\n  }\n\n  function resetCloneCoinModalFields(){\n    setInputErrors(\"\");\n    setCloneCoinActionBtnDisabled(true);\n  }  \n\n  // Burn Modal ----------------------------\n\n  function handleShowBurnItemModalBtn(){\n    getCoin(id).then(data => {\n      setBurnActionBtnText(\"Burn Coin\");\n      setInputErrors(\"\");\n      setBurnActionBtnDisabled(false);\n      setEmojiPrice(0.9);\n      setDataStorageCoin(data);\n      setBurnCoinModalVisibility(true);\n    })\n    \n  }\n\n  function burnItem(){\n    \n    setInputErrors(\"\");\n    setBurnActionBtnText(\"Approving...\");\n    setBurnActionBtnDisabled(true);\n\n    approvenft(process.env.REACT_APP_USERACCESS_ADDRESS, id).then(val => {\n      if (val === \"1\"){\n        setBurnActionBtnText(\"Burning...\");\n        burnCoin(id).then(val => {\n          if (val === \"1\"){\n            setBurnCoinModalVisibility(false);\n            displayMessageRefresh(\"Coin was burned Successfully! Refresh Metadata on Opensea gallery to see changes on Opensea.\");\n          } else {\n            setInputErrors(extractMessage(val?.message));\n            setBurnActionBtnText(\"Burn Coin\");\n            setBurnActionBtnDisabled(false);\n          }\n        });\n      } else {\n        setInputErrors(extractMessage(val?.message));\n        setBurnActionBtnText(\"Burn Coin\");\n        setBurnActionBtnDisabled(false);\n      }\n    });\n  }\n\n  function refreshScreenData() {\n    loadCoinMetadata();\n    getCoinFull(id).then(data => setCoinFullDetail(data));\n  }  \n\n  function refreshMetadata() {\n    alchemyClient.nft.getNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, id).then(nft => {\n      if (Math.floor((Date.now() - new Date(nft.timeLastUpdated))/60000) < 15 ) {\n        displayMessage(\"Metadata can be refreshed every 15 min.\");\n      }\n      alchemyClient.nft.refreshNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, id);\n    });\n  }\n\n  function displayMessage(message){\n    setShowRefreshLink(false);\n    setHeaderMessage(message);\n    setShowMessage(true);  \n  }\n\n  function displayMessageRefresh(message){\n    setShowRefreshLink(true);\n    setHeaderMessage(message);\n    setShowMessage(true);  \n  }   \n\n  function extractMessage(message) {\n    if (message == null) return \"Failed to execute transaction.\";\n\n    let startIndex = message.indexOf('execution reverted:');\n    if (startIndex > 0)\n    {\n      let userMessage = message.substring(startIndex + 20);\n      return userMessage.substring(0, userMessage.indexOf('\"'))\n    }\n\n    if (message.length > 100) return \"Failed to execute transaction.\";\n\n    return message;\n  }\n\n  return (\n    <>\n    { loaded ? (\n      <div className=\"row my-3\">\n        <div className=\"col-md-12\">\n          <div className=\"card py-3  item-details-container\">\n            <div className=\"px-3\">\n              <Alert variant=\"secondary\" show={showMessage} onClose={() => setShowMessage(false)} dismissible>\n                <p className=\"mb-0\">\n                    {headerMessage}\n                    {\n                      showRefreshLink ?\n                      <><br/>You may need to wait few sec. and click <button type=\"button\" className=\"btn btn-link pt-0 px-0\" onClick={refreshScreenData}>Refresh Screen</button> to see updated data on the screen.</>\n                        : <></>\n                    }                     \n                </p>\n              </Alert> \n            </div>\n            <div className=\"px-3\">\n              <Link className=\"btn btn-primary py-1\" to=\"/\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" className=\"bi bi-caret-left-fill\" viewBox=\"0 0 18 18\">\n                  <path d=\"m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z\"/>\n                </svg> \n                 My Gallery\n              </Link>\n              <button type=\"button\" className=\"btn btn-light action-btn py-1 align-right\" onClick={refreshMetadata} disabled={!owned} >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-arrow-clockwise\" viewBox=\"0 0 18 18\">\n                  <path fillRule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"/>\n                  <path d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"/>\n                </svg>                            \n                Refresh Metadata\n              </button>              \n            </div>\n            <div className=\"card-body py-2\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n\n                  <Tabs\n                    defaultActiveKey=\"coin\"\n                    transition={false}\n                    fill\n                  >\n                    <Tab eventKey=\"coin\" title=\"Coin\">\n                      <div className=\"mb-3 card item-card\" style={{backgroundColor: \"#\"+metadata?.background_color}}>\n                        <LazyLoadImage placeholderSrc={LoadingImage} src={metadata?.image} className=\"img-fluid\" alt=\"\" \n                          onError={({ currentTarget }) => {\n                            displayMessage(\"It's taking longer to load image from IPFS, please be patient.\");\n                            currentTarget.src=LoadingImage;\n                            setTimeout(function() { currentTarget.src=metadata?.image; }, 500);\n                          }} \n                        />\n                      </div>\n                      {\n                        !locked && owned && coinDetail != null? (\n                          <a href={process.env.REACT_APP_IPFS_GATEWAY + process.env.REACT_APP_VOX_CID + '/' + coinDetail?.coinTemplate + '.vox'} target=\"_blank\" rel=\"noopener noreferrer\" download>\n                            <button type=\"button\" className=\"btn btn-primary action-btn px-4 mx-2\">\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-download\" viewBox=\"0 0 19 19\">\n                                <path d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\"/>\n                                <path d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                              </svg>                        \n                              Download VOX\n                            </button> \n                          </a>                          \n                        ) :  <></>\n                      }\n                    </Tab>\n                    {\n                      !locked && owned && coinDetail != null? (\n                        <Tab eventKey=\"emoji\" title=\"Emoji\">\n                        <div className=\"mb-3 card sharp-image item-card\">\n                          <LazyLoadImage placeholderSrc={LoadingImage} src={process.env.REACT_APP_IPFS_GATEWAY + process.env.REACT_APP_FACE_CID + '/' + coinDetail?.coinTemplate + '.png'} className=\"img-fluid\" alt=\"\"\n                            onError={({ currentTarget }) => {\n                              currentTarget.src=LoadingImage;\n                              setTimeout(function() { currentTarget.src=process.env.REACT_APP_IPFS_GATEWAY + process.env.REACT_APP_FACE_CID + '/' + coinDetail?.coinTemplate + '.png'; }, 500);\n                            }} \n                          />\n                        </div>\n                        <a href={process.env.REACT_APP_IPFS_GATEWAY + process.env.REACT_APP_FACE_CID + '/' + coinDetail?.coinTemplate + '.png'} target=\"_blank\" rel=\"noopener noreferrer\" download>\n                          <button type=\"button\" className=\"btn btn-primary action-btn px-4 mx-2\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-download\" viewBox=\"0 0 19 19\">\n                              <path d=\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z\"/>\n                              <path d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                            </svg>                        \n                            Download PNG\n                          </button>                         \n                        </a>\n                      </Tab>\n                      ) :  <></>\n                    }\n                  </Tabs>\n                </div>\n                <div className=\"col-md-8 px-1\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"row px-2\">\n                        <div className=\"col-md-11\"><h3>{ metadata?.name }</h3></div>\n                          <div className=\"col-md-1\">\n                          {\n                          !locked && owned ? ( \n                            <>\n                              <img src={require('../assets/images/icons/pencil-square.svg').default} className=\"btn-icon\" alt=\"Edit Name\" width=\"24\" height=\"24\" onClick={() => nameChangeModalShow()}></img>\n                            </>\n                            ) : <></>\n                          }\n                          </div>\n                      </div>\n                      <div className=\"row px-2\">\n                        <div className=\"col-md-11\"><p>{ metadata?.description}</p></div>\n                        <div className=\"col-md-1\">\n                          {\n                            !locked && owned ? ( \n                              <>\n                                <img src={require('../assets/images/icons/pencil-square.svg').default} className=\"btn-icon\" alt=\"Edit Description\" width=\"24\" height=\"24\" onClick={() => descriptionChangeModalShow()}></img>\n                              </>\n                              ) : <></>\n                            }                          \n                        </div>\n                      </div>\n                      <div className=\"row px-2\">\n                          <p>  Owned by: <b>{owned ? 'You' : owner?.slice(-6).toUpperCase()}</b> </p>\n                      </div>     \n                      <div className=\"row px-2\">\n                          <p>  Certificate: <b><a href={metadata?.external_url}>{metadata?.external_url.slice(-46)}</a></b> </p>\n                      </div>    \n                      <div className=\"row px-2\">\n                          <p>  Circulating supply: <b>{coinFullDetail?.coinCount}</b> </p>\n                      </div>  \n                      <div className=\"row px-3\">\n                        {metadata?.attributes.map((attribute, index) => (\n                          <div className=\"col-md-4 mb-2 px-1\" key={index}>\n                            <TokenAttribute attribute={attribute} />\n                          </div>\n                        ))}\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <div className=\"btn-group\" role=\"group\">\n                            {\n                            !locked && owned ? (<>\n                              <button type=\"button\" className=\"btn btn-secondary action-btn px-4 mx-2\" onClick={nameChangeModalShow}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 19 19\">\n                                  <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                                  <path fillRule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n                                </svg> \n                                Change Name\n                              </button>\n                              <button type=\"button\" className=\"btn btn-secondary action-btn px-4 mx-2\" onClick={descriptionChangeModalShow}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 19 19\">\n                                  <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                                  <path fillRule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n                                </svg> \n                                Change Description\n                              </button>\n                              </>\n                            ) \n                            : <></>\n                            }\n                            {\n                            !locked && cloneable && owned ? (\n                              <button type=\"button\" className=\"btn btn-secondary action-btn px-4 mx-2\" onClick={cloneCoinModalShow}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-plus-circle-fill\" viewBox=\"0 0 19 19\">\n                                  <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\"/>\n                                </svg>                                  \n                                Clone\n                              </button>) \n                            : <></>\n                            }\n                            {\n                            !locked && owned ? (\n                              <button type=\"button\" className=\"btn btn-danger action-btn px-4 mx-2\" onClick={handleShowBurnItemModalBtn}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-fire\" viewBox=\"0 0 19 19\">\n                                  <path d=\"M8 16c3.314 0 6-2 6-5.5 0-1.5-.5-4-2.5-6 .25 1.5-1.25 2-1.25 2C11 4 9 .5 6 0c.357 2 .5 4-2 6-1.25 1-2 2.729-2 4.5C2 14 4.686 16 8 16Zm0-1c-1.657 0-3-1-3-2.75 0-.75.25-2 1.25-3C6.125 10 7 10.5 7 10.5c-.375-1.25.5-3.25 2-3.5-.179 1-.25 2 1 3 .625.5 1 1.364 1 2.25C11 14 9.657 15 8 15Z\"/>\n                                </svg>                                 \n                                Burn\n                              </button>) \n                            : <></>\n                            }\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Modal show={nameChangeModalVisibiltiy} onHide={() => setNameChangeModalVisibiltiy(false)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Change Coin Name</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <span>{'You must burn ' + emojiCount + ' Emojis to change Coin name.'}</span>\n            <input maxLength={31} type=\"text\" className=\"form-control\" value={tokenName} onChange={(e) => handleTokenNameInput(e.currentTarget.value)} placeholder=\"New Name\"/>\n            <span className=\"text-danger\">{inputErrors}</span>\n          </Modal.Body>\n          <Stepper steps={ [{title: 'Approve Emoji Burn'}, {title: 'Change Name'}] } activeStep={ nameChangeStep } size={32} circleFontSize={0} titleTop={4} />\n          <Modal.Footer className=\"text-center mx-auto input-modal-footer\">\n            <Button variant=\"secondary\" onClick={nameChangeApprove} disabled={nameChangeApproveBtnDisabled}>\n              { nameChangeApproveBtnText }\n            </Button>\n            <Button variant=\"primary\" disabled={nameChangeActionBtnDisabled} onClick={changeName}>\n              { nameChangeActionBtnText }\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={descriptionChangeModalVisibiltiy} onHide={() => setDescriptionChangeModalVisibiltiy(false)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Change Coin Description</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <span>{'You must burn ' + emojiCount + ' Emojis to change Coin description.'}</span>\n            <textarea maxLength={255} cols={40} rows={3} className=\"form-control\" value={tokenDescription} onChange={(e) => handleTokenDescriptionInput(e.currentTarget.value)} placeholder=\"New Description\"/>\n            <span className=\"text-danger\">{inputErrors}</span>\n          </Modal.Body>\n          <Stepper steps={ [{title: 'Approve Emoji Burn'}, {title: 'Change Description'}] } activeStep={ descriptionChangeStep } size={32} circleFontSize={0} titleTop={4} />\n          <Modal.Footer className=\"text-center mx-auto input-modal-footer\">\n            <Button variant=\"secondary\" onClick={descriptionChangeApprove} disabled={descriptionChangeApproveBtnDisabled}>\n              { descriptionChangeApproveBtnText }\n            </Button>\n            <Button variant=\"primary\" disabled={descriptionChangeActionBtnDisabled} onClick={changeDescription}>\n              { descriptionChangeActionBtnText }\n            </Button>\n          </Modal.Footer>\n        </Modal> \n\n        <Modal show={cloneCoinModalVisibiltiy} onHide={() => setCloneCoinModalVisibiltiy(false)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Clone Coin</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <span>{'You must burn ' + emojiCount + ' Emojis to clone this coin. This action will reduce Grade for both coins.'}</span><br/>\n            <span className=\"text-danger\">{inputErrors}</span>\n          </Modal.Body>\n          <Stepper steps={ [{title: 'Approve Emoji Burn'}, {title: 'Clone Coin'}] } activeStep={ cloneCoinStep } size={32} circleFontSize={0} titleTop={4} />\n          <Modal.Footer className=\"text-center mx-auto input-modal-footer\">\n            <Button variant=\"secondary\" onClick={cloneCoinApproveClick} disabled={cloneCoinApproveBtnDisabled}>\n              { cloneCoinApproveBtnText }\n            </Button>\n            <Button variant=\"primary\" disabled={cloneCoinActionBtnDisabled} onClick={cloneCoinClick}>\n              { cloneCoinActionBtnText }\n            </Button>\n          </Modal.Footer>\n        </Modal>         \n\n        <Modal show={burnCoinModalVisibility} onHide={() => setBurnCoinModalVisibility(false)} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>Burn Coin</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            { dataStorageCoin?.locked && locked ? (\n              <>\n                <h4>The Coin can not be burned, because it’s locked</h4>\n              </>\n            ) : (\n              <>\n                <span>Burning this Coin will reward you with {emojiCount} Emojis. <br/> \n                You will be asked to approve 2 transactions. Please approve both of them.\n                </span> \n              </>\n            )}\n            <br/><br/>\n            <div className=\"text-center\">\n              { dataStorageCoin?.locked && locked ? \n              (<></>) : \n              (\n                <>\n                  <span>\n                    { coinFullDetail?.coinCount === 1 ? \n                      (<> <b>This is the last available copy, it will be lost forever.</b><br/></>) : \n                      (<></>)\n                    }\n                    <b> Are you sure, you want to burn this Coin?</b>\n                  </span>\n                  <br/>\n                  <span className=\"text-danger\">{inputErrors}</span>\n                </>\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer className=\"text-center mx-auto input-modal-footer\">\n            { dataStorageCoin?.locked && locked ? (\n              <Button variant=\"secondary\" onClick={() => setBurnCoinModalVisibility(false)}>\n                Approve\n              </Button>\n            ) : (\n              <>\n                <Button variant=\"danger\" onClick={burnItem} disabled={burnActionBtnDisabled}>\n                  { burnActionBtnText }\n                </Button>\n                <Button variant=\"secondary\" onClick={() => setBurnCoinModalVisibility(false)}>\n                  Cancel\n                </Button>\n              </>\n            )}\n          </Modal.Footer>\n        </Modal>\n        \n      </div>\n    ) : (<></>\n    )}\n      \n    </>\n  );\n}\n\nexport default ItemDetails;","function TokenAttribute( {attribute} ) {\n  return (\n    <>\n    <div className=\"card\">\n        <div className=\"card-body card-body-tight\">\n            <h6 className=\"token-title card-subtitle text-muted text-center\">{ attribute.trait_type ? attribute.trait_type : 'Property' }</h6>\n            <h5 className=\"token-value text-center\">{ attribute.value }</h5>\n        </div>\n    </div>\n    </>\n  );\n}\n\nexport default TokenAttribute;","import { Link } from \"react-router-dom\";\n\nimport \"../assets/css/Home.css\";\n\n\nfunction Navbar( { connectWallet} ) {\n  return (\n    <>\n    <nav className=\"navbar navbar-dark navbar-expand-lg bg-dark\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\"><i>EmojiCoins Gallery</i></Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">    \n                </ul>\n                <div className=\"d-flex\" role=\"search\">\n                    {connectWallet}\n                </div>\n            </div>\n        </div>\n    </nav>\n    </>\n  );\n}\n\nexport default Navbar;","import { useState, useEffect } from 'react';\nimport { providers } from \"ethers\";\nimport Web3Modal from 'web3modal'\nimport { getOwnedEmojis } from \"../lib/erc20\";\nimport { getOwnedTokens } from \"../lib/erc721\";\nimport Toast from 'react-bootstrap/Toast';\n\nfunction ConnectWallet({ onAccountConnect }) {\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const [address, setAddress] = useState(\"\");\n    const [emojis, setEmojis] = useState(0);\n    const [emojiTokens, setEmojiTokens] = useState(null);\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n    \n        const newWeb3Modal = new Web3Modal({\n          cacheProvider: true, \n          network: \"mainnet\",\n        });\n    \n        setWeb3Modal(newWeb3Modal)\n    }, [])\n\n    useEffect(() => {\n        if(web3Modal && web3Modal.cachedProvider){\n          connectWallet()\n        }\n    }, [web3Modal])\n\n    async function connectWallet() {\n      const provider = await web3Modal.connect();\n      addListeners(provider);\n      const ethersProvider = new providers.Web3Provider(provider)\n      ethersProvider.getSigner().getAddress().then(userAddress => {\n        setAddress(userAddress)\n        onAccountConnect(userAddress);\n      });\n    }\n\n    async function disconnectWallet(){\n        await web3Modal.clearCachedProvider();\n        setAddress(\"\")\n    }\n\n    async function showBalances(){\n      setBalances(address);\n      setShow(true);\n    }    \n\n    async function setBalances(userAddress){\n      getOwnedEmojis(userAddress).then(data => {\n          //setEmojis(data / 1000000000000000000);\n          setEmojis(Math.round(data / 10000000000000000) / 100);\n      });\n      getOwnedTokens(userAddress).then(data => {\n          setEmojiTokens(data.toString());\n      });\n    }\n\n    async function addListeners(web3ModalProvider) {\n          web3ModalProvider.on(\"accountsChanged\", (accounts) => {\n          window.location.reload()\n        });\n        \n        // Subscribe to chainId change\n        web3ModalProvider.on(\"chainChanged\", (chainId) => {\n          window.location.reload()\n        });\n    }\n\n    return (\n      <>\n        { address ? (\n          <>\n              <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\n                <Toast.Body><div><div className=\"mx-4 toast-row\">{emojis} Emojis</div><div className=\"mx-4 toast-row\">{emojiTokens} Emoji Coins</div></div></Toast.Body>\n              </Toast>\n              <button className=\"btn btn-outline-danger mx-2\" type=\"button\" onClick={disconnectWallet}>Disconnect {address.slice(-6).toUpperCase()}</button> \n              <button className=\"btn btn-outline-secondary mx-2\" type=\"button\" onClick={() => showBalances()}>Show Balance</button>\n          </>\n              \n        ): (\n          <button type=\"button\" className=\"btn btn-outline-success\" onClick={connectWallet}>Connect Wallet</button>\n        )}\n      </>\n    );\n}\n\nexport default ConnectWallet;\n","import \"../assets/css/base.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <>\r\n    <div>\r\n      <footer className=\"py-1 bg-dark fixed-bottom footer\">\r\n        <div className=\"container\">\r\n          <p className=\"m-0 text-center text-white\">\r\n            &copy; 2021 - 2022 EmojiCoins\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../assets/css/Item.css\";\nimport LoadingImage from \"../assets/images/loading.gif\";\n\nfunction Item( {token} ) {\n  const [ metadata, setMetdata ] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(()=> {\n    if (token?.rawMetadata){\n      let meta = token.rawMetadata;\n      if (meta?.image){\n        meta.image = meta.image.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n      }\n      setMetdata(meta)\n    }\n  },[token])\n\n  function navigateToItem(){\n    navigate(`/items/${token.tokenId}`);\n  }\n  return (\n    <div className=\"card my-3 item-card\" onClick={navigateToItem}>\n    <div className=\"card-header\" style={{backgroundColor: \"#\"+metadata?.background_color}}>\n      <img \n        className=\"card-img-top\" \n        onError={({ currentTarget }) => {\n          currentTarget.src=LoadingImage;\n          setTimeout(function() { currentTarget.src=metadata?.image; }, 200);\n        }}\n        src={metadata?.name + '# error'} \n        alt=\"...\"\n      />\n    </div>\n    \n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{metadata?.name}</h5>\n    </div>\n  </div>\n  );\n}\n\nexport default Item;\n","import { useEffect, useState } from \"react\";\nimport Pagination from 'react-bootstrap/Pagination';\n\nimport Item from \"./Item\";\n\nfunction ItemList( {tokens, totalCount, accountConnected, loaded} ) {\n  const [ pagedTokens, setPagedTokens] = useState([]);\n  const [ paginationItem, setPaginationItems ] = useState(null);\n\n  useEffect(() => {\n    \n    setPagedTokens(tokens.slice(0, process.env.REACT_APP_PER_PAGE_COUNT));\n    updatePagination(1)\n  }, [tokens])\n\n  function fetchPage(e){\n    const latestPage = e.target.innerText ? parseInt(e.target.innerText): 1;\n    setPagedTokens(tokens.slice((process.env.REACT_APP_PER_PAGE_COUNT*(latestPage-1)),process.env.REACT_APP_PER_PAGE_COUNT*latestPage ))\n\n    updatePagination(latestPage)\n  }\n\n  function updatePagination(latestPage){\n    let pagesCount = Math.ceil(totalCount/ process.env.REACT_APP_PER_PAGE_COUNT)\n    let items = [];\n    for (let number = 1; number <= pagesCount; number++) {\n      items.push(\n        <Pagination.Item key={number} active={number === latestPage} onClick={fetchPage}>\n          {number}\n        </Pagination.Item>,\n      );\n    }\n\n    setPaginationItems(items);\n  }\n\n  return (\n    <>\n      <div className=\"row\">\n        {tokens.length > 0 ? \n          pagedTokens.map((token, index) => (\n            <div className=\"col-md-3\" key={index}>\n                <Item token={token}/>\n            </div>\n          )) : (\n            <></>\n        )}\n        {tokens.length > process.env.REACT_APP_PER_PAGE_COUNT ? (\n          <Pagination className=\"justify-content-center\">{paginationItem}</Pagination>\n          ) : (\n            <></>\n        )}\n        {accountConnected === null ? (\n          <div>Please connect you Metamask wallet.</div>\n          ) : (\n            <></>\n        )}\n        {accountConnected != null && tokens.length === 0 && !loaded? (\n          <div>Loading...</div>\n          ) : (\n            <></>\n        )}\n        {accountConnected != null && tokens.length === 0 && loaded? (\n          <div>You have no items in your gallery.</div>\n          ) : (\n            <></>\n        )}        \n            \n      </div>\n    </>\n  );\n}\n\nexport default ItemList;","import { useState, useEffect } from \"react\";\nimport alchemyClient from \"../lib/alchemyClient\";\nimport ItemList from \"../components/ItemList\";\nimport Alert from 'react-bootstrap/Alert'\nimport \"../assets/css/Home.css\";\n\n\nfunction Home( { accountConnected} ) {\n  const [ ownedTokens, setOwnedTokens ] = useState([]);\n  const [ showMessage, setShowMessage ] = useState(true);\n  const [ totalCount, setTotalCount ] = useState(0);\n  const [ loaded, setLoaded ] = useState(false);\n  \n  useEffect(() => {\n    if (accountConnected){\n      async function fetchData(){\n        setLoaded(false);\n        let pageKey = \"  \";\n        let tokens = [];\n        while (pageKey){\n          let r = await alchemyClient.nft.getNftsForOwner(accountConnected, {pageKey:pageKey, contractAddresses:[process.env.REACT_APP_ERC721_TOKEN_ADDRESS]});\n          pageKey = r.pageKey;\n          tokens.push(...r.ownedNfts);\n          setTotalCount(tokens.length);\n          if (tokens.length >= process.env.REACT_APP_GALLERY_MAX_ITEMS_COUNT)\n          break;\n        }\n        setOwnedTokens(tokens);\n        setLoaded(true);\n      }\n      fetchData();\n    }\n    \n  }, [accountConnected])\n\n\n  return (\n    <>\n      <div className=\"row my-3\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <Alert variant=\"secondary\" show={showMessage} onClose={() => setShowMessage(false)} dismissible>\n                In some extreme cases IPFS may be very slow, it may take time for NFT images to load.\n              </Alert> \n              <ItemList tokens={ownedTokens} totalCount={totalCount} accountConnected={accountConnected} loaded={loaded}/>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport ConnectWallet from \"./components/ConnectWallet\";\nimport Footer from \"./components/Footer\";\n\nimport Home from \"./views/Home\";\nimport ItemDetails from \"./views/ItemDetails\";\n\nfunction App() {\n  const [ accountConnected, setAccountConnected] = useState(null);\n\n  function handleOnAccountConnect(val){\n    setAccountConnected(val);\n  }\n\n  return (\n    <>\n      <Navbar connectWallet={<ConnectWallet onAccountConnect={handleOnAccountConnect}/>}/>\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home accountConnected={accountConnected}/>} />\n          <Route path=\"items/:id\" element={<ItemDetails accountConnected={accountConnected}/>} />\n        </Routes>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport \"./assets/css/base.css\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <HashRouter>\n        <App />\n    </HashRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Network, Alchemy } from \"alchemy-sdk\";\n\nconst settings = {\n    apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n    network: Network.MATIC_MAINNET,\n};\n\nconst alchemy = new Alchemy(settings);\n  \nexport default alchemy;","import { ethers } from \"ethers\";\n\nimport abi from \"../contracts/dataStorage.json\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst contract = new ethers.Contract(process.env.REACT_APP_DATASTORE_ADDRESS, abi , polygonProvider)\n\nexport async function getCoinFull(index){\n    const data = await contract.getCoinFull(index);\n    return data;\n}\n\nexport async function getCoin(index){\n    const data = await contract.getCoin(index);\n    return data;\n}","export default __webpack_public_path__ + \"static/media/loading.429b2865.gif\";","import { ethers } from \"ethers\";\nimport abi from \"../contracts/userAccess.json\";\nimport alchemyClient from \"./alchemyClient\";\n\nconst polygonProvider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = polygonProvider.getSigner();\nconst contract = new ethers.Contract(process.env.REACT_APP_USERACCESS_ADDRESS, abi, signer)\n\nexport async function setName(tokenId, newName){\n    try {\n        const data = await contract.setName(tokenId, newName);\n        await polygonProvider.waitForTransaction(data.hash);\n        await alchemyClient.nft.refreshNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, tokenId);\n        return '1';\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n}\n\nexport async function setDescription(tokenId, newDescription){\n    try {\n        const data = await contract.setDescription(tokenId, newDescription);\n        await polygonProvider.waitForTransaction(data.hash);\n        await alchemyClient.nft.refreshNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, tokenId);\n        return '1';\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n}\n\nexport async function burnCoin(tokenId){\n    try {\n        const data = await contract.burnCoin(tokenId);\n        await polygonProvider.waitForTransaction(data.hash);\n        await alchemyClient.nft.refreshNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, tokenId);\n        return '1';\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n}\n\nexport async function getClonePrice(id){\n    const data = await contract.getClonePrice(id);\n    return data;\n}\n\nexport async function cloneCoin(tokenId){\n    try {\n        const data = await contract.cloneCoin(tokenId);\n        await polygonProvider.waitForTransaction(data.hash);\n        //await alchemyClient.nft.refreshNftMetadata(process.env.REACT_APP_ERC721_TOKEN_ADDRESS, tokenId);\n        return '1';\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n}"],"sourceRoot":""}